{"ast":null,"code":"var _jsxFileName = \"/Volumes/D/BU_Courses/2024Spring/ec530/HelloApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 定义状态：数据（message）、加载状态（isLoading）和错误状态（error）\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // 数据请求开始时，设置加载状态为true，错误状态清空\n    setIsLoading(true);\n    setError(null);\n    fetch('http://127.0.0.1:5000/api/users/hello').then(response => {\n      if (!response.ok) {\n        // 如果响应状态不是2xx，抛出错误\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // 数据加载成功，设置消息状态，加载状态为false\n      setMessage(data.hello);\n      setIsLoading(false);\n    }).catch(error => {\n      // 捕获到错误时，设置错误状态，加载状态为false\n      console.error('Error fetching data:', error);\n      setError(error.toString());\n      setIsLoading(false);\n    });\n  }, []);\n\n  // 根据不同状态渲染不同UI\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  } else if (error) {\n    // 当有错误发生时，显示错误信息\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  } else {\n    // 数据加载成功且无错误时，显示消息\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message.charAt(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(App, \"ikqSsHsRqoQcuKlq//hZE0NSIyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","message","setMessage","isLoading","setIsLoading","error","setError","fetch","then","response","ok","Error","json","data","hello","catch","console","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","_c","$RefreshReg$"],"sources":["/Volumes/D/BU_Courses/2024Spring/ec530/HelloApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  // 定义状态：数据（message）、加载状态（isLoading）和错误状态（error）\n  const [message, setMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // 数据请求开始时，设置加载状态为true，错误状态清空\n    setIsLoading(true);\n    setError(null);\n\n    fetch('http://127.0.0.1:5000/api/users/hello')\n      .then(response => {\n        if (!response.ok) {\n          // 如果响应状态不是2xx，抛出错误\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        // 数据加载成功，设置消息状态，加载状态为false\n        setMessage(data.hello);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        // 捕获到错误时，设置错误状态，加载状态为false\n        console.error('Error fetching data:', error);\n        setError(error.toString());\n        setIsLoading(false);\n      });\n  }, []);\n\n  // 根据不同状态渲染不同UI\n  if (isLoading) {\n    return <div>Loading...</div>;\n  } else if (error) {\n    // 当有错误发生时，显示错误信息\n    return <div>Error: {error}</div>;\n  } else {\n    // 数据加载成功且无错误时，显示消息\n    return <div>{message.charAt(1)}</div>;\n  }\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACAQ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEdC,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB;QACA,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ;MACAX,UAAU,CAACW,IAAI,CAACC,KAAK,CAAC;MACtBV,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDW,KAAK,CAACV,KAAK,IAAI;MACd;MACAW,OAAO,CAACX,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAACD,KAAK,CAACY,QAAQ,CAAC,CAAC,CAAC;MAC1Bb,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAID,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B,CAAC,MAAM,IAAIjB,KAAK,EAAE;IAChB;IACA,oBAAOP,OAAA;MAAAoB,QAAA,GAAK,SAAO,EAACb,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC,CAAC,MAAM;IACL;IACA,oBAAOxB,OAAA;MAAAoB,QAAA,EAAMjB,OAAO,CAACsB,MAAM,CAAC,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACvC;AACF;AAACtB,EAAA,CA1CQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}