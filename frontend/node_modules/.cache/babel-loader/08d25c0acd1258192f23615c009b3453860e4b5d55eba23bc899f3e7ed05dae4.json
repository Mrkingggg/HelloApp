{"ast":null,"code":"var _jsxFileName = \"/Volumes/D/BU_Courses/2024Spring/ec530/HelloApp/frontend/src/App.js\";\n// import React, { useState, useEffect } from 'react';\n\n// // const cors = require('cors')\n// // const express = require('express')\n// // const app = express()\n\n// // app.use(cors());\n// function App() {\n//   // 定义状态：数据（message）、加载状态（isLoading）和错误状态（error）\n//   const [message, setMessage] = useState('');\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     // 数据请求开始时，设置加载状态为true，错误状态清空\n//     setIsLoading(true);\n//     setError(null);\n\n//     fetch('http://127.0.0.1:5000/api/users/hello')\n//       .then(response => {\n//         if (!response.ok) {\n//           // 如果响应状态不是2xx，抛出错误\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         // 数据加载成功，设置消息状态，加载状态为false\n//         setMessage(data.hello);\n//         setIsLoading(false);\n//       })\n//       .catch(error => {\n//         // 捕获到错误时，设置错误状态，加载状态为false\n//         console.error('Error fetching data:', error);\n//         setError(error.toString());\n//         setIsLoading(false);\n//       });\n//   }, []);\n\n//   // 根据不同状态渲染不同UI\n//   if (isLoading) {\n//     return <div>Loading...</div>;\n//   } else if (error) {\n//     // 当有错误发生时，显示错误信息\n//     return <div>Error: {error}</div>;\n//   } else {\n//     // 数据加载成功且无错误时，显示消息\n//     return <div>{message}</div>;\n//   }\n// }\n\n// export default App;\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/D/BU_Courses/2024Spring/ec530/HelloApp/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// // const cors = require('cors')\n// // const express = require('express')\n// // const app = express()\n\n// // app.use(cors());\n// function App() {\n//   // 定义状态：数据（message）、加载状态（isLoading）和错误状态（error）\n//   const [message, setMessage] = useState('');\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     // 数据请求开始时，设置加载状态为true，错误状态清空\n//     setIsLoading(true);\n//     setError(null);\n\n//     fetch('http://127.0.0.1:5000/api/users/hello')\n//       .then(response => {\n//         if (!response.ok) {\n//           // 如果响应状态不是2xx，抛出错误\n//           throw new Error('Network response was not ok');\n//         }\n//         return response.json();\n//       })\n//       .then(data => {\n//         // 数据加载成功，设置消息状态，加载状态为false\n//         setMessage(data.hello);\n//         setIsLoading(false);\n//       })\n//       .catch(error => {\n//         // 捕获到错误时，设置错误状态，加载状态为false\n//         console.error('Error fetching data:', error);\n//         setError(error.toString());\n//         setIsLoading(false);\n//       });\n//   }, []);\n\n//   // 根据不同状态渲染不同UI\n//   if (isLoading) {\n//     return <div>Loading...</div>;\n//   } else if (error) {\n//     // 当有错误发生时，显示错误信息\n//     return <div>Error: {error}</div>;\n//   } else {\n//     // 数据加载成功且无错误时，显示消息\n//     return <div>{message}</div>;\n//   }\n// }\n\n// export default App;\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <h1>\n        Hello App!\n      </h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACC,EAAA,GARQN,GAAG;AAUZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}